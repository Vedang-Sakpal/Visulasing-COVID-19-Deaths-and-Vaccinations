<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20241.24.0515.0324                               -->
<workbook original-version='18.1' source-build='2024.1.3 (20241.24.0515.0324)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Covid19Analysis_17198979994050' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Table 3)' inline='true' name='federated.084gxfg0j4j2ef19632h90v68s07' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table 3' name='excel-direct.06lppws19syvg7151p98k1952peq'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/a/Desktop/Desktop/MySQL/Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.06lppws19syvg7151p98k1952peq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.06lppws19syvg7151p98k1952peq' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0F28EB53A84D412B98F26071B4DF6A2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0F28EB53A84D412B98F26071B4DF6A2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0F28EB53A84D412B98F26071B4DF6A2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_0F28EB53A84D412B98F26071B4DF6A2E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_0F28EB53A84D412B98F26071B4DF6A2E]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/a/AppData/Local/Temp/TableauTemp/#TableauTemp_0y3ph031nuopkm1fw7lm80wu685r.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/02/2024 04:35:15 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>199</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_0F28EB53A84D412B98F26071B4DF6A2E'>
            <properties context=''>
              <relation connection='excel-direct.06lppws19syvg7151p98k1952peq' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table 4)' inline='true' name='federated.08dw8n608j5wdd15r5n3u04qg7n4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table 4' name='excel-direct.1jztv870c6ccsl165nk1j1lusg8p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/a/Desktop/Desktop/MySQL/Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jztv870c6ccsl165nk1j1lusg8p' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1jztv870c6ccsl165nk1j1lusg8p' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C14FEB9E4DA34E848471879F7ED9A275]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C14FEB9E4DA34E848471879F7ED9A275]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C14FEB9E4DA34E848471879F7ED9A275]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C14FEB9E4DA34E848471879F7ED9A275]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C14FEB9E4DA34E848471879F7ED9A275]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C14FEB9E4DA34E848471879F7ED9A275]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/a/AppData/Local/Temp/TableauTemp/#TableauTemp_05e8b3q1fd1z0p14fvcr2109qzbj.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/02/2024 04:35:49 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>298</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>289</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1419</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>HighestInfectionCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[HighestInfectionCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>HighestInfectionCount</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17308</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PercentPopulationInfected</remote-name>
              <remote-type>5</remote-type>
              <local-name>[PercentPopulationInfected]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PercentPopulationInfected</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28756</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C14FEB9E4DA34E848471879F7ED9A275'>
            <properties context=''>
              <relation connection='excel-direct.1jztv870c6ccsl165nk1j1lusg8p' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table 1)' inline='true' name='federated.0acu2tp08tw66713yd1xw1a1exwd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table 1' name='excel-direct.01h9ehc1kmoptr18cvka21t18jlm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/a/Desktop/Desktop/MySQL/Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.01h9ehc1kmoptr18cvka21t18jlm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.01h9ehc1kmoptr18cvka21t18jlm' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6013702E42C14DE79BDEE264FCFC7E24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6013702E42C14DE79BDEE264FCFC7E24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6013702E42C14DE79BDEE264FCFC7E24]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6013702E42C14DE79BDEE264FCFC7E24]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/a/AppData/Local/Temp/TableauTemp/#TableauTemp_0baearo07aajv310jla230bw9d7v.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/02/2024 04:33:37 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>DeathPercentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[DeathPercentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>DeathPercentage</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6013702E42C14DE79BDEE264FCFC7E24'>
            <properties context=''>
              <relation connection='excel-direct.01h9ehc1kmoptr18cvka21t18jlm' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Table 2)' inline='true' name='federated.0rw8xw704a0m5w1ejc0691jy28xo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Table 2' name='excel-direct.03q88h00trnguz12p01xz0gukoie'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/a/Desktop/Desktop/MySQL/Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.03q88h00trnguz12p01xz0gukoie' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.03q88h00trnguz12p01xz0gukoie' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77F5F35C889A4E8998805612E1CE79F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77F5F35C889A4E8998805612E1CE79F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_77F5F35C889A4E8998805612E1CE79F3]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/a/AppData/Local/Temp/TableauTemp/#TableauTemp_12wu26i1gij6yb1dbgi4d0j0pfsj.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='07/02/2024 04:35:04 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77F5F35C889A4E8998805612E1CE79F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>TotalDeathCount</remote-name>
              <remote-type>20</remote-type>
              <local-name>[TotalDeathCount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>TotalDeathCount</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77F5F35C889A4E8998805612E1CE79F3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d2283d'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#eb4c48'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f67561'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fc9b87'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_77F5F35C889A4E8998805612E1CE79F3'>
            <properties context=''>
              <relation connection='excel-direct.03q88h00trnguz12p01xz0gukoie' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_90113F38F38A4581B1855FA8D3F28AAA]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location,Forecast Indicator' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Golbal Numbers </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table 1)' name='federated.0acu2tp08tw66713yd1xw1a1exwd' />
          </datasources>
          <datasource-dependencies datasource='federated.0acu2tp08tw66713yd1xw1a1exwd'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0acu2tp08tw66713yd1xw1a1exwd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0acu2tp08tw66713yd1xw1a1exwd].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0acu2tp08tw66713yd1xw1a1exwd].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0acu2tp08tw66713yd1xw1a1exwd].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0acu2tp08tw66713yd1xw1a1exwd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0acu2tp08tw66713yd1xw1a1exwd].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0acu2tp08tw66713yd1xw1a1exwd].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0acu2tp08tw66713yd1xw1a1exwd].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0acu2tp08tw66713yd1xw1a1exwd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0acu2tp08tw66713yd1xw1a1exwd].[:Measure Names]' value='150' />
            <format attr='height' value='54' />
            <format attr='text-format' field='[federated.0acu2tp08tw66713yd1xw1a1exwd].[Multiple Values]' value='N' />
            <format attr='text-format' field='[federated.0acu2tp08tw66713yd1xw1a1exwd].[sum:DeathPercentage:qk]' value='n#,##0.0000;-#,##0.0000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#0080bc' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#c0c0c0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='2' />
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0acu2tp08tw66713yd1xw1a1exwd].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0acu2tp08tw66713yd1xw1a1exwd].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{2F247239-9236-4C9B-A225-9141C59CFCF8}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table 2)' name='federated.0rw8xw704a0m5w1ejc0691jy28xo' />
          </datasources>
          <datasource-dependencies datasource='federated.0rw8xw704a0m5w1ejc0691jy28xo'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0rw8xw704a0m5w1ejc0691jy28xo].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0rw8xw704a0m5w1ejc0691jy28xo].[none:location:nk]' value='134' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0rw8xw704a0m5w1ejc0691jy28xo].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2083977460861206' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0rw8xw704a0m5w1ejc0691jy28xo].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.0rw8xw704a0m5w1ejc0691jy28xo].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{8012E636-4BA8-49C5-95ED-3480AA8AEF07}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Infected Population Percentage Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table 3)' name='federated.084gxfg0j4j2ef19632h90v68s07' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.084gxfg0j4j2ef19632h90v68s07'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.084gxfg0j4j2ef19632h90v68s07].[Longitude (generated)]' field-type='quantitative' max='6912196.1557396986' min='-16361479.776411459' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.084gxfg0j4j2ef19632h90v68s07].[Latitude (generated)]' field-type='quantitative' max='5691970.0408753809' min='-4927439.757206318' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.084gxfg0j4j2ef19632h90v68s07].[sum:PercentPopulationInfected:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.084gxfg0j4j2ef19632h90v68s07].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.084gxfg0j4j2ef19632h90v68s07].[none:Location:nk]' />
              <color column='[federated.084gxfg0j4j2ef19632h90v68s07].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.084gxfg0j4j2ef19632h90v68s07].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.084gxfg0j4j2ef19632h90v68s07].[Latitude (generated)]</rows>
        <cols>[federated.084gxfg0j4j2ef19632h90v68s07].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{807DAF74-3B17-4BFA-A3CC-6FCD94CADA5A}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent of Population Affected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Table 4)' name='federated.08dw8n608j5wdd15r5n3u04qg7n4' />
          </datasources>
          <datasource-dependencies datasource='federated.08dw8n608j5wdd15r5n3u04qg7n4'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Europe&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Location:nk]' />
              <text column='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Location:nk]' />
              <color column='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Forecast Indicator:nk]' />
              <text column='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[fVal:avg:PercentPopulationInfected:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08dw8n608j5wdd15r5n3u04qg7n4].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.08dw8n608j5wdd15r5n3u04qg7n4].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{A602B1CE-14F2-4E16-824A-E0853C8A8D2D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98002' id='8' param='horz' type-v2='layout-flow' w='99034' x='483' y='999'>
            <zone h='98002' id='6' type-v2='layout-basic' w='89378' x='483' y='999'>
              <zone h='17228' id='3' name='Sheet 1' w='42184' x='483' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31711' id='5' name='Sheet 2' w='42184' x='483' y='18227'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48939' id='10' name='Sheet 3' w='47194' x='42667' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49063' id='12' name='Sheet 4' w='75618' x='483' y='49938'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49063' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Location:nk]&#10;[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Forecast Indicator:nk]' type-v2='color' w='13760' x='76101' y='49938'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98002' id='7' is-fixed='true' param='vert' type-v2='layout-flow' w='9656' x='89861' y='999'>
              <zone h='19476' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0rw8xw704a0m5w1ejc0691jy28xo].[none:location:nk]' type-v2='color' w='9656' x='89861' y='999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='9114' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.084gxfg0j4j2ef19632h90v68s07].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='20475'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98002' id='16' param='vert' type-v2='layout-flow' w='99034' x='483' y='999'>
                <zone fixed-size='130' h='17228' id='3' is-fixed='true' name='Sheet 1' w='42184' x='483' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48939' id='10' is-fixed='true' name='Sheet 3' w='47194' x='42667' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9114' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.084gxfg0j4j2ef19632h90v68s07].[sum:PercentPopulationInfected:qk]' type-v2='color' w='9656' x='89861' y='20475'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='31711' id='5' is-fixed='true' name='Sheet 2' w='42184' x='483' y='18227'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='19476' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.0rw8xw704a0m5w1ejc0691jy28xo].[none:location:nk]' type-v2='color' w='9656' x='89861' y='999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49063' id='12' is-fixed='true' name='Sheet 4' w='75618' x='483' y='49938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='49063' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Location:nk]&#10;[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Forecast Indicator:nk]' type-v2='color' w='13760' x='76101' y='49938'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{44F72EBB-BB7A-449A-BE73-B722085822FB}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0acu2tp08tw66713yd1xw1a1exwd].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C0905AD6-1EE1-40DD-8B2C-81706501ED73}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0rw8xw704a0m5w1ejc0691jy28xo].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0rw8xw704a0m5w1ejc0691jy28xo].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B0F13CA8-2316-4C49-B64B-246565550747}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.084gxfg0j4j2ef19632h90v68s07].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.084gxfg0j4j2ef19632h90v68s07].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B988510E-6CD1-4AAC-9B98-3DA2A96C790B}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Location:nk]&#10;[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.08dw8n608j5wdd15r5n3u04qg7n4].[tmn:date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Forecast Indicator:nk]</field>
            <field>[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Location:nk]</field>
            <field>[federated.08dw8n608j5wdd15r5n3u04qg7n4].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48039581-9317-4FD3-8D01-4977855498EA}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0rw8xw704a0m5w1ejc0691jy28xo].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.08dw8n608j5wdd15r5n3u04qg7n4].[tmn:date:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight field='[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Location:nk]&#10;[federated.08dw8n608j5wdd15r5n3u04qg7n4].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='12' />
      <simple-id uuid='{51CA6D38-8F72-4B45-9886-8CD377226D37}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='78' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAVkElEQVR4nO3daXNbWX7f8e9dsAPEwp0gxZ2U2K2RpW5JM9OembgSl8fjlGPHSSp+A3k3
      qTzIw7yAOHFlkhpXeRKnapK4Oz3TcfeoW5TUJEFRFBeQIIid2O+SB9TSPQIoNRaK4v1/qrQQ
      BO75E/f+eBecc49i27aNEA6lvu0ChHibJADC0SQAoqVm9YTE5hZNs/0RcqNSpFiun2NVvae/
      7QLEBWQ1+cXf/JIf/Pj3adQqrD56yOy171FIPSWTrzDmr/GfPn7Kn/94mbwyhMco4I+OEdZr
      PD4osjgZY+8wjX9giF/94q+4+Y//nEG9QtkOcG1hGkV52z/gSxIA8ap6CcMTYWJsnE/+7hdM
      3fgB//OX/4NaJcvK9Ahl/wQTM4sElBrrx4fkknso1jrl7D4hv5fDnVGGlm6z+uu/Z3g0ztWF
      Kf72r/8jizfuvu2f7BVyCCRe5Q0Tsgp8/Ovf4A0M8PDLe/jCMTw+H5qqYHtDFPYSlGoGAB6f
      H1CIRcKML15nOOjC5/WiYBP0qqxt7jI7M8knn3yKzcW66KjIZVDRim3bWJaFqqov/rVt+9nh
      i4JtWSiq+uy5AKffsywb9cXjp489/z4oKIp6oQ6BzjUApmmiadp5NSfEa8khkHA0CYBwNAmA
      cDQJgHA0CYBwNAmAcDQJgHC0i9UVonICpUL/lh8bBpe7f8sX75yOAlCvnqC6g+g0OcrkGR4e
      ol4uUbNUIqEA2eM0wcggWAYet4tqrYnP53n9grNpSDzopKQ38+GPJADiW75zAMxmjUef/z1D
      N35GfX8dTyDA5naVSi6Hy2VTDgQ5UT3spRIEvBp+zUYJT7xZAIQ4Z985AJrLy9zMFEXAUFzM
      T8ZZf/QQb3icIX+dxE6O23cXeLy2TqWUJVXX+eFMANM0sSyLs3peKJZFPztKGKYJhtHHFsS7
      5jsHoFmv8GR7n0okxJjHZPXBI4KxcQoHO2znVBamRvjyy1Xcbi/+UIzJMTdb+2nmJ0cAzu4L
      pPb3nFzXNNAv1mmPeLu+89agu7xcu/MHKIqCy6XTbJq4XDrW+BC2raBpKpHhMTTNBdioqkLY
      tPpQuhDd+84BUFQVj+fl8bzbffpbW9NeLsr14kRTefY96QEqLib5HEA4mgRAOJoEQDiaBEA4
      mgRAOJoEQDiaBEA4mgRAOJoEQDiaBEA4mgRAOFpXASgcH3L//iqlWpO97QRriSdYRp0H97/i
      8LhAJpPBbJQ5TOd7Va8QPdVV3+Dd1DHXlmb4evNrNC1E1GfwYHWd6ZX32NvcwOVSSCUbzCy/
      j23bL/6cpZ+3jbTt538JcaqrAIwPRlhb36RhWwTcLnQdGoaN26WhqSqN2gmVuoKmKS82ftM0
      2y5Ptay+BsCyLOwz2hfO093oEEXBtFUWF1c42tngIKdz/b1ZHty7R2w0zoA2wFI4yMFhmun4
      KLZtv9UBMZqmyoAY8S0X6+7Qe0/6Pyg+FOnf8sU7R64CCUeTAAhHkwAIR5MACEeTAAhHk2uC
      b8iunEAm1b8GhsdRvP7+LV+0JAF4Q/bBDvb/+kXflq/+9F/B5Fzfli9ak0Mg4WgSAOFoEgDh
      aBIA4WgSAOFoXV0F2tlcI1uqMDAySSW9Q83SuTo7wcPNXcKxYXy6xWDIw3HNzczEYK9qFqJn
      ugqAZT2b9KJRRA/GmfE3eLiR5NadW2ytb1Ao5kmmXNy9ffPdnyCjz2MVTNOSyTvegq4CUCjX
      WVlZYi2xjaqYnNgm0aCLTLFCvWngC0UJGQ2yJ3WGQl7g3Z0gw1JV+tlvXNNUFBmrcO66eseX
      FmbZerLP4tI1aoUjSk2dxYUhthIJpufmUa0GwWCAXK4EeHtUshC901UAfKEoKytRAALeOM+P
      8ueXrj773+lGH4vJIBRxMclVIOFoEgDhaBIA4WgSAOFoEgDhaBIA4WgSAOFoEgDhaBIA4WgS
      AOFoEgDhaF31BcodpyiWawxEh/AoTSqGymAkRDp1wEBsBCwDr8dNpVrH7/f1qmYheqa7znCB
      IM1amVQmQy2fx+OyqWR91N0hDjYSBLw6PtVCj07il1veiAuoqwB4fQGeFqvML0zy2HIz5K+T
      2Mlx++4Sj8tFKqUsqbrOD2f9MiDmNWRAzNvRVQCalSy2N4LLFaSSWWMro7J4ZYwvvriHzx/C
      H4oxNe7l8d4RC1OjgAyIaUcGxLwdXb3jui/K8mwUFIWbt29j2wqKArHROIpy+vtSUSAi03KJ
      C6qrADzfyE//r/L8y28+fvp1N60I0T+yz70EbNOERq1/Dbg8l/bw7HL+VA5jba3R+A//tm/L
      d/3lv0G/+f2+Lf9tkg/ChKNJAISjSQCEo7UNQCm5RrJokd/f5LDUPM+ahDg3bU+C/+HT/02i
      +oCRAT9/+Mez51iSEOen7R7gxz/9C8J6k3q1SK0hn2SJy6ntHqBxckT82vdZnggQ9vWzh44Q
      b0/7k2A9yOqnv+TnP/85mbJ00hKXU9sAuPwR7ty5w8zYIIYlh0Dicmp7CGTUy2xubtJsGHhd
      rXNSLxfY2NohPr1A+XiXkqGzPDfBwwdrDMVncCsG0QEfR/kG4yPRvv0QQnSqbQC8oQhBj4uG
      P0rI2zoAiY0NcPnRlCrFupuY3+DB/XVmr19nL7GOpsHhfpP5lfexbRvbtrEsq20xim33tc+9
      bdvYZ7T/mhf3tpgWi++0trPGWPTEa9bbu6xtAMrJNcJLHzFafsR+vsncoOeV5xiWwsryPBuP
      HqL5RlA1C8MEl6aiKApGo0qtYaMqyosAnLmy+hwAy7I735D7HgCr4zb6HYDXrrd3WOsA2Da+
      iet4PvuEAyXMR1F3y6fNTcd5+HCN0fgclcw+qbzO9ffneHDvHrGxSTyayVA4SDJ1zHR8BNu2
      3+qAGE1T4az2z9DvATGqqqJ0WFu/3zdFVc9eb++wlgGo5/f5Ktnkzkd/wN6D37CbbzAbe3UP
      MDA0zs2h8dMvhl8e49/64Na3njcdD/WwZCF6p2UA3KFBkg//G3/99efUGgr/fPn2edclxLlo
      GQBF9/HP/uW/xrZtFEV5ZYSXEJdF25Ngu3HCf/+7X9G04Ef/5E+IBWTsjLh8Wm7Vtm1ROEwQ
      mf2A5XEfIe/lPAESouXlA6N2wm/u75Bc+4yPP/6YYs0877qEOBct9wAu3wAfLI2QCd3An1ml
      VDcZlEMgcQm13ao3n+yQyB0wGBvkD1dc51mTEOem7Scotz78kEJ6n+TuNtmKHAKJy6n9cY2i
      84Pf/wma1aCvH4EK8Ra13QOomsq9zz/D4/ZiSwLEJdX+cwAbjHqV//PpP/Av5q6eZ03iEqn+
      1/9C5T//Vd+WH/l3/x5tbKzj17cNQNXUuXHzFuMzywwHW58EN6pljjI5wrFhdKtOzVSJDATI
      Hh8RjAyBZeBxu6jWGvh83o6LFO8uu9HAPjnpYwPdddNuGQCzmuNX//ced2/f5OHnnzIQ+6cM
      +V996s7ONqHYKC7NZG3tCS4XlAN+yqqPvVSCgFfDr9ko4Ql8MkGMuIBa9wY9yVMs5rn3299S
      zSVJF42WARiMRtnb3yGX9eINj35jgoxFHq+tv5wgYyYgE2S8RjcTZFhmf6/SWaaJ0WltfR5I
      YxgmdhcTi7QMgDc2xZ/+7I84HQr8fcLRV7tCAzSaTTRdA1eQamaHJ1mVhakR7n15H4/bhz8U
      Y3LMzdZ+mvnJEUAmyGinmwkyTE2jnxFQNQ29w9rUfq9TXUPr4s7VrXuDKgqKqqI+W+PtfvON
      jE8RHZnApevY03EsQFNVosPjqLoOto2qKkRkUL24oFoGwKiX+ezTTyiUyjSaBj/9s79kOPTq
      UxVVxf0s4YqmvbimqruenTQ/60atqtKdWlxMLfdPLt8AP7m9xMHhEfWGRfOSjgcVou0BmqZ5
      +PDuD3Bp7Q+BhHjXtb8vkAXLN25zc2GcqgwHEJdU2wB8+qu/ZaM6zKBf44/+9M/OsyYhzk3b
      Q6Cf/OwviHhOn6LLNBrikmq7aTdKaYZmrjM37Jab44pLq3VXiGYNYssslNapq+9zJdL6xlhC
      vOtaBqCW2+dvPl5lYjgG5IhPTTIgA+PFJdTmk2CVmYWrLE4OA+Brc3doId51LQPgG7zCh9HT
      fhZCXGat9wCqJld+hCN0vZnvPF4jV26w9yTBWuIJllHnwVdfcXBcIJM5xmyUOUzne1GrED3X
      1c1+qoU0x9ksVnCIck0n6jd4sLrG9Mp77G1uoLsUUvsNZq6+/2bzA9Dfbhe2TRfzA/S0lFcX
      f4Fro4v5AfpfWndzF3QVgLX1DRq1CoeHh4R9EXQNmga4XRqaqtKslanWQVNfTpBhnjF4Q+3z
      oBPLsrA7HTxi97k224IOa+t41ps3ZNl257X1uSOlZXX+vkGXAbh55yMq+RQnSphCMsFBTuf9
      92ZPJ8gYjRPWBp5NkJFmOj56MSbIuKgDYtRuBsT0931TVbXzATF9vrO4pvVhQMx34Y+M4gdG
      wtdfPPbB706Q4R/othkh+kKu9QhHkwAIR5MACEeTAAhHkwAIR5MACEeTAAhHkwAIR5MACEeT
      AAhHkwAIR5MACEfrqjPc8eEuycNj/LExapl9arbO1dkJHm7uMhAbxq9bDIY8HNfczEwM9qpm
      IXqmqwBEIlF29g7QlRp6KM6Mv8HDjSS37txia32DQjFP8tDF3Ts3ZYKM15AJMjrTlwky3lTD
      VHhvZYmHG0/RtQYntkk06CJTrFBvGvhCUUJGg+xJnaHQ6RxhMkFGazJBRmf6MkHGm2rWT9g6
      yLC0fI1GMU3J0FlcGGIrkWB6bh7VahIM+snlS4BMkicunq4CEI6NEo6Nnn7hixN79vj80vNp
      VU83+lg00k0zQvSNXAUSjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYBEI4mARCOJgEQjiYB
      EI7WVQAso87u7h4Nw6JczHGcK2LbNkcHSWoNg1qtBrZFuVLtVb1C9FRXneHyuTx+r856IoFZ
      q+N1QSXrpeEOcbCRIODV8akmemyKgL9XJQvRO931Bg0P8PVagqkrYxxmLIb8dRI7OW7fXeJx
      uUillCVV1/nhrF8GxLyGDIjpzFsdEPPg3hcY3gFqhk4ls8HjjMbilTG++Py3+AID+EMxpsa9
      PN5LsTA1BsiAmHZkQExn3uqAmO/d+QjbtlEUhdHBuy8eHxyNw7OZQRQFIv2eKEqIDnUVAEVR
      UFpNgfM7j/V5lhwhOiaXQYWjSQCEo0kAhKNJAISjSQCEo0kAhKNJAISjSQCEo0kAhKNJAIRj
      lT//SgIgnKu2ud1dAJrVE+4/WgdgZ2uDR+tbmEaN+1/eI5nOc3ycxmyccHCU60nBQvRad7dH
      N21sow5mmVLDTcxv8OD+OrPXb7CXWENTbQ73DeZX3se2bWzbPrN/uGLbfe1zb9s2dqf9088Y
      x9ALtk3HtZ01xqInXrPeznxpj0t5Zfld1AZ2dwHwB0PomgK2japqqKqFYYKunfYSNZo1ag0b
      VVFeBODsldXfAFiW3fmG3PcAWB230e8AvH69nf3afrIsG6WL2rqbI+xgl2w2x256DLdVIJXX
      uX59jgf37hEbm8SrmQxGgiRTx0zHR7Bt++wBMUp/T0k0TYWz2j9DvwfEqKqK0mFt/R5IpKjq
      2evtDGqf+8JrWue1KYraXQCGxqf40fjU6Rfjwy8ev/XBrW89bzoe6qYZIfpGrgIJR5MACEeT
      AAhHkwAIR5MACEeTAAhHkwAIR5MACEfreQBs2+akVKRpWqf3k7QtGo1mr5sRoie6+iS4lVJq
      h+18A9s8IOBRCbkVmr5hJofDvW5KiK71fA+QytdYubqIV4NKKcvmQYH40ECvmxGiJ3oegNGI
      l0drCWom+EMxluJRnqayvW5GiJ7o+SFQaPQKc4ESHn8QxTbRdZ2wnAOIC6rnAVAUhWDo+SHP
      6Q7G7Xa/mCDjTL4AjF3pdUkvqTq0mUzieb/1lne7BuxgGHv59/pWmu0LonRYmxUMw/f/Ub9K
      w44NY3ZYmzI3j+uP/6RvtVke75nrtF1dAK75aRS778OJXjJNs+O+2/1mmuZpn/wLeC/35784
      +j3ZRCeej8i6iOv1TdZpz/cAZ7mIK/C5i1zbRQzlN13U9+5N6jrXyjtZkY9Wv2B1dZVCud6H
      il5qNdlHfv8pXyW2ye7vkqs2XnlN6ugIgJ3d3W89nrj/GTvp8mvbtMw6xdLrZ9BsWVt6n3tf
      fsX2Xqrla9rVtre5ysZO+rVtgkEhf9JRbd/FydEO/+/B5rceK+QLHS/vm96ktnPdA3SiXq+j
      e9wYlTxbOaifZPHRJGd48Cs1KrUagyNXSB7soOp+4jEvyVSGsdllpkaiXbVtNCwwK+SKOn5P
      js/u76J5fQT1JqYeYP9Jgvlrv0f+cIfDZJLl67cY8FgYnhjN412SFZ3D4wInlRoef5B4zEfy
      6JiRsVn2dxPMLc5RKcHm+iHR0UmoZkimy9z+4R3cr9mmLMukaVjEYhHWVu9RrhsMR0MQuUI5
      vc3h3g75uRWq2QOOU0kmF77HcNhDqenCbhxTzDb5OnFAtXqCx+dnemKY/cMU0ZErpHe+Zvrq
      EsW0xe72Oq6BYYJqne2nh9z46EcEe7jV7GXKRHVo1Iv8+jerLFxboXScwmqckHiyzcTcDSaH
      g71r8HdczH3XN4Qiw1y/fp2QV8MwDCqVKorLy3vXFmmaGivL0+QzRSauzOF3KySTB/gHwnhc
      vVlLk9PT7D99SqNcIDa1iFu1UN0BVpYXGY9PMXNlnIHBURZm4hhNg8LxAceZHKlUmrqis3z1
      KoMjIwyG/RwcJAkORHHrCvGZBQYHvBjVE9yRMabGBsjmqzRKWapvMOlhMDzCzRsrfP3wPk1b
      Z2k2TqlYpGkYVKt1hkfjLMxMEYgMsrw8i1Fr0qzkOEylSSUPKBsKswtXGRweIj4SIZk8wBsY
      wO/RGZqYZmJ4ALNRx3aHmL8yTiZbQDVyFHo55bPV4OjwkGwmzWGuQXx8kHwui2mapNMZvG6F
      7HFv9gbtnOtJcCf2thPkSjWmZuY52t9G8YYYi4bwD0Q4yabYOyowMzHEl4/WmF24RsQDT3YP
      mJ5bIOhzd9V2rVhECQbJ7e0SGhsntf0YT3iUgFcjEg5TyqU5KjUZDAfwujTQvTTKBXzhGEY5
      T6mpEg35KZ2U0VRwKRZbu4dMT8+AYuP3qJTKFtVCCsMVxKrkaVga0/PzuF/zq6layvH46T6j
      8Wl044TDbJmFuUk2E1t4QxHGwl52M2VGYgMEfG4ahoZqnGD7onjMEpmKTcjvp1Ip4dZVdF1j
      a2uHielZVKtJOOwjm6ljNQsUGio+apRrDcZnrhLs7m19wayXKTVVwj6NXP6E9NHpnlC3DRSz
      RrpYZnBwgsFooDcNtvD/AcRdw4rloMWvAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      32oAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      CJ0fvtQnpg0AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
